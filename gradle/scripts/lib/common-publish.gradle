def isReleaseVersion = !(rootProject.version.endsWith('-SNAPSHOT'))
def publishSignatureRequired = 'true' == rootProject.findProperty('publishSignatureRequired') &&
                               'true' != System.getenv('JITPACK') &&
                               !rootProject.hasProperty('nosign')
def publishUrlForRelease = rootProject.findProperty('publishUrlForRelease')
def publishUrlForSnapshot = rootProject.findProperty('publishUrlForSnapshot')
def publishUsernameProperty = rootProject.findProperty('publishUsernameProperty')
def publishPasswordProperty = rootProject.findProperty('publishPasswordProperty')
def gpgKeyId = rootProject.findProperty("gpgKeyId")
def gpgSecretKey = rootProject.findProperty("gpgPrivateKey")
def gpgPassword = rootProject.findProperty("gpgPassword")

apply plugin: 'io.github.gradle-nexus.publish-plugin'

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri(publishUrlForRelease - "staging/deploy/maven2/"))
            snapshotRepositoryUrl.set(uri(publishUrlForSnapshot))
            username = project.findProperty(publishUsernameProperty)
            password =  project.findProperty(publishPasswordProperty)
        }
    }
}

configure(projectsWithFlags('publish')) {
    apply plugin: 'maven-publish'


    task install(
            group: 'Publishing',
            description: 'An alias of publishToMavenLocal',
            dependsOn: tasks.publishToMavenLocal)
}
