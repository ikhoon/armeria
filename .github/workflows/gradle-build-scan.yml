name: Upload Gradle build scans to ge.armeria.dev

on:
  check_run:
    types: [ completed ]

env:
  LC_ALL: "en_US.UTF-8"
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  ACTIONS_STEP_DEBUG: true
  GH_TOKEN: ${{ github.token }}
  GH_DEBUG: true

jobs:
  upload-gradle-build-scan:
    name: Upload Gradle build scans
    # TODO(ikhoon): Uncomment this after testing
#    if: github.repository == 'line/armeria'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - id: setup-jdk-19
        name: Set up JDK 19
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '19'

      - id: get-run-id
        name: Get run ID
        run: |
          gh pr checks ${{ github.event.check_run.pull_requests[0].number }} -R ikhoon/armeria | \
          grep runs | \
          head -n 1 | \
          sed 's/.*runs\/\([0-9]*\)\/.*/CHECK_RUN_ID=\1/' >> "$GITHUB_OUTPUT" || true
        shell: bash

#      - id: download-artifacts
#        name: Download artifacts
#        run: |
#          gh run download ${{ steps.get-run-id.outputs.CHECK_RUN_ID }} -R ikhoon/armeria -D build_scans
#        shell: bash

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow_conclusion: ""
          run_id: ${{ steps.get-run-id.outputs.CHECK_RUN_ID }}
          name: build-scan.*
          # Optional, name is treated as a regular expression if set true
          name_is_regexp: true
          # Optional, a directory where to extract artifact(s), defaults to the current directory
          path: build-scans
          # Optional, defaults to current repo
          repo: ikhoon/armeria
          # Optional, check the workflow run to whether it has an artifact
          # then will get the last available artifact from the previous workflow
          # default false, just try to download from the last one
          check_artifacts: true
          # Optional, search for the last workflow run whose stored an artifact named as in `name` input
          # default false
          search_artifacts: true

      - id: upload-build-scans
        name: Upload build scans
        run: |
          SCANS=""
          for scan in build_scans/*/ ; do
            rm -rf ~/.gradle/build-scan-data
            cp -r $scan ~/.gradle/build-scan-data
            ./gradlew --no-daemon --stacktrace buildScanPublishPrevious
            SCANS="- scan: $(cat build/build-scan-url.txt)\n${SCANS}"
          done
          echo "SCANS=${SCANS}" >> "$GITHUB_OUTPUT"
        shell: bash

      - id: create-or-update-comment
        name: Create or update comment
        uses: actions/github-script@v5
        with:
          script: |
            const prNumber = ${{ github.event.check_run.pull_requests[0].number }}

            const scans = ${{ steps.upload-build-scans.outputs.scans }}
            const comments = await github.rest.pulls.listComments({
              ...context.repo,
              pull_number: prNumber,
            })
            let scanComment = comments.data.find(comment => comment.body.includes('Gradle build scans'))

            const commentBody = `### Gradle build scans (commit: ${{ github.sha }})\n\n${scans}`;
            if (scanComment) {
              // Update the previous comment
              await github.rest.pulls.updateComment({
                ...context.repo,
                comment_id: scanComment.id,
                body: commentBody
              })
            } else {
              // If no previous comment, create a new one
              await github.rest.pulls.createComment({
                ...context.repo,
                pull_number: prNumber,
                body: commentBody
              })
            }
